---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.project }}-{{ .Values.app.tier }}"
  labels:
    app.kubernetes.io/name: "{{ .Values.project }}-{{ .Values.app.tier }}"
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.app.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: "{{ .Values.project }}-{{ .Values.app.tier }}"
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "{{ .Values.project }}-{{ .Values.app.tier }}"
    spec:
      containers:
        - image: {{ .Values.app.image }}
          imagePullPolicy: {{ .Values.app.imagePullPolicy }}
          name: "{{ .Values.project }}-{{ .Values.app.tier }}"
          ports:
            - containerPort: {{ .Values.app.service.targetPort }}
              protocol: TCP
          resources:
            limits:
              cpu: {{ .Values.app.limits.cpu }}
              memory: {{ .Values.app.limits.ram }}
            requests:
              cpu: {{ .Values.app.requests.cpu }}
              memory: {{ .Values.app.requests.ram }}
          {{- if .Values.app.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.app.readinessProbe.path }}
              port: {{ .Values.app.readinessProbe.port }}
            initialDelaySeconds: {{ .Values.app.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.app.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.app.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.app.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.app.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.app.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.app.readinessProbe.path }}
              port: {{ .Values.app.readinessProbe.port }}
            initialDelaySeconds: {{ .Values.app.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.app.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.app.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.app.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.app.readinessProbe.failureThreshold }}
          {{- end }}
          env:
            {{- range $env := .Values.app.envs }}
            - name: {{ $env.name }}
              value: "{{ $env.value }}"
            {{- end }}
          securityContext:
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1001

...